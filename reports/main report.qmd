---
title: "Response traits and stability in the context of a pulse perturbation. Are fundamental niche- or realised niche-based response traits more informative?"
editor: visual
execute: 
  echo: false
  message: false
  warning: false
  cache: true
format:
  html:
    code-fold: false
    code-summary: "Show the code"
    toc: true
    toc-location: left
    toc-depth: 3
    toc-expand: true
---

```{r}
#| echo: false
#| message: false
#| warning: false
rm(list = ls())
library(tidyverse)
library(readxl)
library(here)
library(kableExtra)
library(patchwork)
library(mgcv)
library(broom)

source(here("R/intrinsic_growth_rate.R"))

options(dplyr.summarise.inform = FALSE)

## evaluate data manipulation steps?
#evalflag <- TRUE
```

# Introduction

In the context of a pulse perturbation we ask:

-   will fundamental niche-based response traits, such as those measured according to Ross et al (2023), explain variation in community stability?
-   is a realised niche-based response trait able to explain more variation in community stability?

We explore these questions using a simulation model of a multi-species model, in which species intrinsic growth rate is a bell-shaped function of temperature, and each species can have a different temperature optimum. A pulse perturbation is created by briefly setting temperature lower than the control temperature, and then returning it to control temperature. We then manipulate the strength of inter-specific interactions and examine how that affects the explanatory power of the two types of response trait.

# Methods

## The multispecies model

We have $S$ species that can be interacting and whose vital rates are temperature dependent. We assume density-dependent birth rate, ($B$), and death rate ($D$) in a discrete-time version of the classical Lotkaâ€“Volterra model [@de2013predicting; @vasseur2020impact] to get instantaneous growth rate, $\tilde{r}_{i}(t)$, for species, $i$, in year $t$:

\begin{equation}\label{eq.r}
   \tilde{r}_{i}(t) = ln N_{i}(t+1) - ln N_{i}(t) = B(N_{i}(t),N_{j}(t),T(t)) - D(N_{i}(t),N_{j}(t),T(t))(\#eq:r)
\end{equation}

Here, $N(t)$ represents the biomass at year $t$, and $i,j$ are indices for two different species.

The per-capita birth and death rates for $i^{th}$ species are represented as:

\begin{equation}\label{eq.B}
   B_{i} = b_{0,i}(T)-\beta (N_{i}+\sum_{i \neq j = 1}^{S} \alpha_{ij}N_{j})(\#eq:B)
\end{equation}

\begin{equation}\label{eq.D}
   D_{i} = d_{0,i}(T)-\delta (N_{i}+\sum_{i \neq j = 1}^{S} \alpha_{ij}N_{j})(\#eq:D)
\end{equation}

where, $\beta$ and $\delta$ are density-dependent constants, $\alpha_{i,j}$ is the competition coefficient between species $i$ and $j$, and 

\begin{equation}\label{eq.b0}
   b_{0,i}(T) = a_{b} e^{-(T-b_{opt,i})^2/s_{i}} (\#eq:b0)
\end{equation}

\begin{equation}\label{eq.d0}
   d_{0,i}(T) = a_{d} e^{z_{i}T} (\#eq:d0)
\end{equation}

with $a_{b}$, $a_{d}$ as intercepts, and for $i^{th}$ species, $b_{opt,i}$ is the temperature that optimizes birth rate, $s_{i}$ governs the breadth of the birth function, $z_{i}$ scales the effect of temperature (in &deg;C) to mimic the Arrhenius relationship.

Substituting Eqs. (\ref{eq.B}) - (\ref{eq.d0}) in Eq. (\ref{eq.r}), we get the following,

\begin{equation}\label{eq.r2}
   \tilde{r}_{i}(t) = r_{m,i} \left( 1-\dfrac{\sum_{i, j = 1}^{S} \alpha_{ij}N_{j}}{K_{i}} \right) (\#eq:r2)
\end{equation}

where, $\alpha_{ii} = 1$, $r_{m,i} = (b_{0,i} - d_{0,i})$ is the intrinsic (maximum) rate of increase and $K_{i} = r_{m,i}/(\beta+\delta)$ is the carrying capacity for the $i^{th}$ species, respectively.

## Model parameters

The following need to be specified for a community (in addition to the number of species):

```{r}
#| echo: false
species_and_community_properties <- read_excel(here("experiments/1-design/species_and_community_properties.xlsx"))
species_and_community_properties %>% 
  kbl() %>%
  kable_styling()
```

## Experimental treatments

### Pulse pertubation treatment

The context of our entire study is a pulse perturbation. Temperature is constant in one treatment, and is pulse perturbed in another. For simplicity, we always make the perturbed temperature lower than the control temperature. We do not manipulate or change anything about the pulse perturbation. The graph below shows the control temperature in black and the pulse in red. Simulations are run for 10'000 time steps before the pulse is applied and run for another 1'000 after the pulse starts.

```{r}
#| echo: false
temperature_treatments <- readRDS(here("data/pack1/temperature_treatments.RDS"))
temperature_treatments |>
  filter(time > 9900) |> 
  ggplot(aes(x = time)) +
  geom_line(aes(y = temperature_control), col="black", linewidth = 3) +
  geom_line(aes(y = temperature_pulse), col="red", linewidth = 1)
  
```

### Creating a community

In order to create a community we define a set of $S$ species and in the following only two things differ among the species:

1. The optimum temperature for growth, such that some species have maximum intrinsic growth rate at higher temperatures and some have maximum intrinsic growth at lower temperatures. The optimum temperature for growth for each species in a community is drawn from a uniform distribution with a specific mean and range.
2. The interspecific interactions in the interaction matrix $alpha_{i,j}$. These are drawn from a normal distribution with mean zero and standard deviation $sd(alpha_{i,j})$.

### Community composition treatment

We create communities that vary in their composition by changing the mean of the uniform distribution from which species' optimum temperature for growth are drawn. If we set the mean low, close to the temperature of the perturbation, then the perturbation as a positive effect on many of the species intrinsic growth rates. In contrast, if we set the mean close to the control temperature then the perturbation has mostly negative effects on the species' intrinsic growth rates. We show some communities in the Results section of this report. 

### Strength of species interactions treatment

When we set $sd(alpha_{i,j})$ = 0 then there are no interspecific interactions. Larger values of $sd(alpha_{i,j})$ mean that interspecific interactions are stronger.

## Analyses

### Species response traits

We calculated two types of species response trait. First was a response trait based on the temperature response curve of a species. For this trait, we calculated the effect of the perturbation on intrinsic growth rate (perturbation temperature intrinsic growth rate - control temperature intrinsic growth rate).

Second was a response trait based on the observed response of the species to the pulse perturbation in the community context. Hence this response trait depends on the direct effect of the pulse on a species, and also the indirect effects via other species in the community.

### Community response diversity

*For the moment we don't calculate the response diversity, but rather then mean of the response trait values and the variance of the response trait values of the species in a community. Maybe we see enough with that, maybe we benefit from using a measure of response diversity.*

### Community stability

This was calculated as the effect of the pulse perturbation on the total community biomass. Specifically the area between the control and perturbed dynamics.

# Results

```{r}
#| echo: false
expt <- readRDS(here("data/merged/expt.RDS"))
community_pars <- readRDS(here("data/merged/community_pars.RDS"))
dynamics <- readRDS(here("data/merged/dynamics.RDS"))
species_response_traits <- readRDS(here("data/merged/species_response_traits.RDS"))
comm_all <- readRDS(here("data/merged/comm_all.RDS"))
expl_all <- readRDS(here("data/merged/expl_all.RDS"))
comm_time_stab <- readRDS(here("data/merged/comm_time_stab.RDS"))
```

```{r}
#| echo: false
cases <- unique(expt$case_id)
```

## Example of a single community

**No inter-specific interactions and low optimum temperature, so the pulse has positive effect on intrinsic growth rate of most species.**

```{r}
#| echo: false
case_number <- 1
```


```{r}
#| echo: false
## read in experimental design
## Created by code in "design_expt.r" script in the experiments/1-design folder
#expt <- readRDS(here("data/expt_communities.RDS"))
#temperature_treatments <- readRDS(here("data/temperature_treatments.RDS"))

min_temperature <- min(c(temperature_treatments$temperature_control,
                       temperature_treatments$temperature_pulse))
max_temperature <- max(c(temperature_treatments$temperature_control,
                       temperature_treatments$temperature_pulse))
min_max_temps <- tibble(temperature = c(min_temperature, max_temperature),
                        y = c(0,0))
buffer <- (max_temperature - min_temperature ) / 5
temperatures <- seq(min_temperature - buffer, max_temperature + buffer, 0.1)

coi <- cases[case_number]
temp <- expt |>
  dplyr::filter(case_id == coi)
#temp$community_object
b_opt_i <- temp$community_object[[1]]$b_opt_i
a_b_i <- temp$community_object[[1]]$a_b_i
s_i <- temp$community_object[[1]]$s_i
a_d_i <- temp$community_object[[1]]$a_d_i
z_i <- temp$community_object[[1]]$z_i
#alpha_ij <- temp$community_object[[1]]$alpha_ij

## for each species do all temps
for(i in 1:length(b_opt_i)) {
  
  species_pars <- list(b_opt_i = b_opt_i[i],
                       a_b_i = a_b_i[i],
                       s_i = s_i[i],
                       a_d_i = a_d_i[i],
                       z_i = z_i[i])

  rates <- intrinsic_growth_rate(species_pars = species_pars,
                        temperature = temperatures)
  
  if(i == 1)
    resp_curves <- tibble(species_id = paste0("Spp-", i),
                          temperature = temperatures,
                          intrinsic_growth_rate = rates)
  if(i > 1)
    resp_curves <- rbind(resp_curves,
                         tibble(species_id = paste0("Spp-", i),
                                temperature = temperatures,
                          intrinsic_growth_rate = rates))
    
}
```


Immediately below are the performance curves (reactions norms) of intrinsic growth rate versus temperature, for each of the species in the example community.

```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 8
resp_curves |> 
ggplot(aes(x = temperature, y = intrinsic_growth_rate)) +
  geom_line() +
  facet_grid(rows = vars(species_id)) +
  geom_vline(xintercept = c(min_temperature, max_temperature)) +
  ggtitle(paste(coi, paste(round(b_opt_i,1), collapse = ", "), sep = "\n")) 

```

Immediately below is the response of each species to the perturbation. Each panel is a species, with the control and the pulse perturbed dynamics.

```{r}
#| echo: false

## Look at some of the species level data
cases <- unique(dynamics$case_id)

case_of_interest <- cases[case_number] 
p1 <- dynamics |>
  filter(case_id == case_of_interest) |>
  select(case_id, Species_ID, Time, Treatment, Abundance) |> 
  ggplot(aes(x = Time, y = Abundance, linetype = Treatment)) +
  #geom_point() +
  geom_line() +
  ggtitle(paste(case_of_interest)) +
  facet_wrap(~ Species_ID, nrow = 3, scales = "free_y") 
p1
#p2 <- species_time_stab |>
#  filter(case_id == case_of_interest) |> 
#  ggplot(aes(x = Time, y = spp_deltabm, col = Species_ID)) +
#  #geom_point() +
#  geom_line() +
#  geom_hline(yintercept = 0) +
#  ggtitle(paste(case_of_interest)) +
#  facet_wrap(~ Species_ID, nrow = 1, scales = "free_y") 
#p1 / p2
```

Here are the corresponding species response traits in this case:

```{r}
#| echo: false
species_response_traits %>% 
  filter(case_id == case_of_interest) |>
  select(species_id,
         species_tot_deltabm_spline,
         species_tot_deltabm_raw,
         igr_pert_effect) |> 
  kbl() %>%
  kable_styling()
```

And the total biomass dynamics from which community stability is calculated.




```{r}
#| echo: false
p1 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = Control), col = "black", linewidth = 3) +
  geom_line(aes(y = Perturbed), col = "red", linewidth = 1) +
  ylab("Total abundance")

p2 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = comm_LRR))

p3 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = comm_deltabm))
p1 / p2 / p3
```

## Example of a single community

**No interspecific interactions and higher optimum temperature, so the pulse has positive effect on intrinsic growth rate of some species, and negative on a few.**

```{r}
#| echo: false
case_number <- 3
```


```{r}
#| echo: false
## read in experimental design
## Created by code in "design_expt.r" script in the experiments/1-design folder
#expt <- readRDS(here("data/expt_communities.RDS"))
#temperature_treatments <- readRDS(here("data/temperature_treatments.RDS"))

#min_temperature <- min(c(temperature_treatments$temperature_control,
#                       temperature_treatments$temperature_pulse))
#max_temperature <- max(c(temperature_treatments$temperature_control,
#                       temperature_treatments$temperature_pulse))
#min_max_temps <- tibble(temperature = c(min_temperature, max_temperature),
#                        y = c(0,0))
#buffer <- (max_temperature - min_temperature ) / 5
#temperatures <- seq(min_temperature - buffer, max_temperature + buffer, 0.1)


coi <- cases[case_number]
temp <- expt |>
  dplyr::filter(case_id == coi)
#temp$community_object
b_opt_i <- temp$community_object[[1]]$b_opt_i
a_b_i <- temp$community_object[[1]]$a_b_i
s_i <- temp$community_object[[1]]$s_i
a_d_i <- temp$community_object[[1]]$a_d_i
z_i <- temp$community_object[[1]]$z_i
#alpha_ij <- temp$community_object[[1]]$alpha_ij

## for each species do all temps
for(i in 1:length(b_opt_i)) {
  
  species_pars <- list(b_opt_i = b_opt_i[i],
                       a_b_i = a_b_i[i],
                       s_i = s_i[i],
                       a_d_i = a_d_i[i],
                       z_i = z_i[i])

  rates <- intrinsic_growth_rate(species_pars = species_pars,
                        temperature = temperatures)
  
  if(i == 1)
    resp_curves <- tibble(species_id = paste0("Spp-", i),
                          temperature = temperatures,
                          intrinsic_growth_rate = rates)
  if(i > 1)
    resp_curves <- rbind(resp_curves,
                         tibble(species_id = paste0("Spp-", i),
                                temperature = temperatures,
                          intrinsic_growth_rate = rates))
    
}
```


Immediately below are the performance curves (reactions norms) of intrinsic growth rate versus temperature, for each of the species in the example community.

```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 8
resp_curves |> 
ggplot(aes(x = temperature, y = intrinsic_growth_rate)) +
  geom_line() +
  facet_grid(rows = vars(species_id)) +
  geom_vline(xintercept = c(min_temperature, max_temperature)) +
  ggtitle(paste(coi, paste(round(b_opt_i,1), collapse = ", "), sep = "\n")) 

```

Immediately below is the response of each species to the perturbation. Each panel is a species, with the control and the pulse perturbed dynamics.

```{r}
#| echo: false
#temp <- readRDS(here("data/sim_results.RDS"))
#temp <- readRDS(here("data/sim_results.RDS"))

#community_pars <- temp$community_pars
#dynamics <- temp$dynamics_long

## Look at some of the species level data
cases <- unique(dynamics$case_id)
case_of_interest <- cases[case_number]

p1 <- dynamics |>
  filter(case_id == case_of_interest) |>
  select(case_id, Species_ID, Time, Treatment, Abundance) |> 
  ggplot(aes(x = Time, y = Abundance, linetype = Treatment)) +
  #geom_point() +
  geom_line() +
  ggtitle(paste(case_of_interest)) +
  facet_wrap(~ Species_ID, nrow = 3, scales = "free_y") 
p1
#p2 <- species_time_stab |>
#  filter(case_id == case_of_interest) |> 
#  ggplot(aes(x = Time, y = spp_deltabm, col = Species_ID)) +
#  #geom_point() +
#  geom_line() +
#  geom_hline(yintercept = 0) +
#  ggtitle(paste(case_of_interest)) +
#  facet_wrap(~ Species_ID, nrow = 1, scales = "free_y") 
#p1 / p2
```

Here are the corresponding species response traits in this case:

```{r}
#| echo: false
#species_response_traits <- readRDS(here("data/species_measures.RDS"))
species_response_traits %>% 
  filter(case_id == case_of_interest) |>
  select(species_id,
         species_tot_deltabm_spline,
         species_tot_deltabm_raw,
         igr_pert_effect) |> 
  kbl() %>%
  kable_styling()
```

And the total biomass dynamics from which community stability is calculated:

```{r}
#| echo: false
p1 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = Control), col = "black", linewidth = 3) +
  geom_line(aes(y = Perturbed), col = "red", linewidth = 1) +
  ylab("Total abundance")

p2 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = comm_LRR))

p3 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = comm_deltabm))
p1 / p2 / p3
```



## Example of a single community

**Inter-specific interactions and higher optimum temperature, so the pulse has positive effect on intrinsic growth rate of some species, and negative on a few.**

```{r}
#| echo: false
case_number <- 129
```


```{r}
#| echo: false
## read in experimental design
## Created by code in "design_expt.r" script in the experiments/1-design folder
#expt <- readRDS(here("data/expt_communities.RDS"))
#temperature_treatments <- readRDS(here("data/temperature_treatments.RDS"))

#min_temperature <- min(c(temperature_treatments$temperature_control,
#                       temperature_treatments$temperature_pulse))
#max_temperature <- max(c(temperature_treatments$temperature_control,
#                       temperature_treatments$temperature_pulse))
#min_max_temps <- tibble(temperature = c(min_temperature, max_temperature),
#                        y = c(0,0))
#buffer <- (max_temperature - min_temperature ) / 5
#temperatures <- seq(min_temperature - buffer, max_temperature + buffer, 0.1)


coi <- cases[case_number]
temp <- expt |>
  dplyr::filter(case_id == coi)
#temp$community_object
b_opt_i <- temp$community_object[[1]]$b_opt_i
a_b_i <- temp$community_object[[1]]$a_b_i
s_i <- temp$community_object[[1]]$s_i
a_d_i <- temp$community_object[[1]]$a_d_i
z_i <- temp$community_object[[1]]$z_i
#alpha_ij <- temp$community_object[[1]]$alpha_ij

## for each species do all temps
for(i in 1:length(b_opt_i)) {
  
  species_pars <- list(b_opt_i = b_opt_i[i],
                       a_b_i = a_b_i[i],
                       s_i = s_i[i],
                       a_d_i = a_d_i[i],
                       z_i = z_i[i])

  rates <- intrinsic_growth_rate(species_pars = species_pars,
                        temperature = temperatures)
  
  if(i == 1)
    resp_curves <- tibble(species_id = paste0("Spp-", i),
                          temperature = temperatures,
                          intrinsic_growth_rate = rates)
  if(i > 1)
    resp_curves <- rbind(resp_curves,
                         tibble(species_id = paste0("Spp-", i),
                                temperature = temperatures,
                          intrinsic_growth_rate = rates))
    
}
```


Immediately below are the performance curves (reactions norms) of intrinsic growth rate versus temperature, for each of the species in the example community.

```{r}
#| echo: false
#| fig-width: 4
#| fig-height: 8
resp_curves |> 
ggplot(aes(x = temperature, y = intrinsic_growth_rate)) +
  geom_line() +
  facet_grid(rows = vars(species_id)) +
  geom_vline(xintercept = c(min_temperature, max_temperature)) +
  ggtitle(paste(coi, paste(round(b_opt_i,1), collapse = ", "), sep = "\n")) 

```

Immediately below is the response of each species to the perturbation. Each panel is a species, with the control and the pulse perturbed dynamics.

```{r}
#| echo: false
#temp <- readRDS(here("data/sim_results.RDS"))
#temp <- readRDS(here("data/sim_results.RDS"))

#community_pars <- temp$community_pars
#dynamics <- temp$dynamics_long

## Look at some of the species level data
cases <- unique(dynamics$case_id)
case_of_interest <- cases[case_number]

p1 <- dynamics |>
  filter(case_id == case_of_interest) |>
  select(case_id, Species_ID, Time, Treatment, Abundance) |> 
  ggplot(aes(x = Time, y = Abundance, linetype = Treatment)) +
  #geom_point() +
  geom_line() +
  ggtitle(paste(case_of_interest)) +
  facet_wrap(~ Species_ID, nrow = 3, scales = "free_y") 
p1
#p2 <- species_time_stab |>
#  filter(case_id == case_of_interest) |> 
#  ggplot(aes(x = Time, y = spp_deltabm, col = Species_ID)) +
#  #geom_point() +
#  geom_line() +
#  geom_hline(yintercept = 0) +
#  ggtitle(paste(case_of_interest)) +
#  facet_wrap(~ Species_ID, nrow = 1, scales = "free_y") 
#p1 / p2
```

Here are the corresponding species response traits in this case:

```{r}
#| echo: false
#species_response_traits <- readRDS(here("data/species_measures.RDS"))
species_response_traits %>% 
  filter(case_id == case_of_interest) |>
  select(species_id,
         species_tot_deltabm_spline,
         species_tot_deltabm_raw,
         igr_pert_effect) |> 
  kbl() %>%
  kable_styling()
```

And the total biomass dynamics from which community stability is calculated:

```{r}
#| echo: false
p1 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = Control), col = "black", linewidth = 3) +
  geom_line(aes(y = Perturbed), col = "red", linewidth = 1) +
  ylab("Total abundance")

p2 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = comm_LRR))

p3 <- comm_time_stab |>
  filter(case_id == case_of_interest) |> 
  ggplot(aes(x = Time)) +
  geom_line(aes(y = comm_deltabm))
p1 / p2 / p3
```




## Response trait and community stability

In the following various graphs is the relationship between community mean of species response trait (realised or fundamental) (x-axis) and community stability (y-axis).

```{r}
#| echo: false
#comm_all <- readRDS(here("data/community_measures.RDS"))



comm_all |> 
  ggplot(aes(x = mean_spp_deltabm_spline,
             y = comm_tot_deltabm_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2) +
  theme(legend.position="none") +
  ggtitle("Realised niche-based response trait")

```

```{r}
#| echo: false
comm_all |> 
  ggplot(aes(x = mean_igr_effect, y = comm_tot_deltabm_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2, scales = "free_y") +
  theme(legend.position="none") +
  ggtitle("Fundamental niche-based response trait")

```

```{r}
#| echo: false
#| eval: false
comm_all |> 
  ggplot(aes(x = mean_spp_deltabm_spline, y = OEV_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2, scales = "free_y") +
  theme(legend.position="none")

```

```{r}
#| echo: false
#| eval: false
comm_all |> 
  ggplot(aes(x = mean_igr_effect, y = OEV_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2, scales = "free_y")  +
  theme(legend.position="none")


```

## Explanatory power

And here we show how much variability in community stability is explained by the community mean of the species response traits, for realised niche-based response traits, and for fundamental niche-based response traits. How much variability explained is that of a GAM.



```{r}
#| echo: false

```


```{r}
#| echo: false
expl_all %>%
  ggplot(aes(x = alpha_ij_sd, y = value, col = variable)) +
  geom_point() +
  geom_smooth(method = "gam", formula = y ~ s(x, bs = "cs")) +
  xlab("Strength of interspecific interactions") +
  ylab("Proportion of variation in community stability\nexplained by two types of response trait") +
  scale_color_manual(labels = c("Fundamental trait", "Realised trait"), values = c("blue", "red")) +
  labs(colour = "Type of response trait")
  
```




# Appendix

## Check various relationships

```{r}
#| echo: false

```

```{r}
#| echo: false
species_response_traits |> 
  ggplot(aes(x = igr_pert_effect,
             y = species_tot_deltabm_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2) +
  theme(legend.position="none")
```

```{r}
#| echo: false
species_response_traits |> 
  ggplot(aes(x = species_tot_deltabm_raw,
             y = species_tot_deltabm_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2) +
  theme(legend.position="none")
```


```{r}
#| echo: false
comm_all |> 
  ggplot(aes(x = comm_tot_deltabm_raw,
             y = comm_tot_deltabm_spline)) +
  geom_point() +
  facet_wrap(vars(alpha_ij_sd), nrow = 2) +
  theme(legend.position="none")
```
